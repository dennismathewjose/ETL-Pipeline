version: '3'
services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka-container
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - spark-network
    restart: always
    command: /bin/bash -c "sleep 30 && /opt/bitnami/scripts/kafka/entrypoint.sh /run.sh"
 
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper-container
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - spark-network
    restart: always
 
  spark:
    image: bitnami/spark:3.5.4
    container_name: spark-container
    volumes:
      - ./service_account_detail.json.json:/app/service_account_detail.json
      - ./jars/spark-3.5-bigquery-0.41.1.jar:/opt/bitnami/spark/jars/spark-3.5-bigquery-0.41.1.jar
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: "/app/service_account_detail.json"
    depends_on:
      - kafka
    networks:
      - spark-network
    command: >
      spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.4
      com.google.cloud.spark:spark-3.5-bigquery:0.41.1
      /app/Kafka_Consumer.py
 
  producer:
    build: .
    container_name: producer-container
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: "/app/service_account_detail.json"
    volumes:
      - ./service_account_detail.json:/app/service_account_detail.json
    command: ["python", "/app/kafka_producer.py"]
    depends_on:
      - kafka  # Producer starts after Kafka
    networks:
      - spark-network
 
  consumer:
    build: .
    container_name: consumer-container
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: "/app/service_account_detail.json"
    volumes:
      - ./service_account_detail.json:/app/service_account_detail.json
      - ./wait_for_kafka.py:/app/wait_for_kafka.py  # Mount the new wait_for_kafka.py script
    command: >
      bash -c "
        python /app/wait_for_kafka.py &&  # First run the waiting script
        python /app/Kafka_Consumer.py  # Then run the Kafka consumer script
        python /app/test_bigquery.py
      "
    depends_on:
      - kafka  # Consumer starts after Kafka
    networks:
      - spark-network

networks:
  spark-network:
    driver: bridge